name: CI

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.18.0'

      - name: Install dependencies
        run: npm install
        working-directory: backend

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for postgres..."
            sleep 1
          done



      - name: Verify environment variables
        run: |
          echo "DATABASE_URL=postgresql://ecoecho:bingo@localhost:5432/ecoecho"
          echo "JWT_SECRET=your_jwt_secret_here"

      - name: Print DATABASE_URL
        run: echo "DATABASE_URL=postgresql://ecoecho:bingo@localhost:5432/ecoecho"

      - name: Test database connection
        run: |
          psql postgresql://ecoecho:bingo@localhost:5432/ecoecho -c '\l'

      - name: Run Prisma migrations
        env:
          DATABASE_URL: postgresql://ecoecho:bingo@localhost:5432/ecoecho
        run: npx prisma migrate deploy
        working-directory: backend

      - name: Run critical tests
        env:
          DATABASE_URL: postgresql://ecoecho:bingo@localhost:5432/ecoecho
          JWT_SECRET: your_jwt_secret_here
        run: npm test -- --testPathPattern=tests/tasks.test.js
        working-directory: backend
